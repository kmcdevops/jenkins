pipeline {
    agent any

    environment {
        DOCKER_IMAGE   = 'java-sample-app:1.0'
        CONTAINER_NAME = 'java-sample-container'
        APP_PORT       = '5000'
        HOST_PORT      = '9090'
    }

    stages {
        stage('Cleanup Workspace') {
            steps {
                echo 'üßπ Cleaning workspace...'
                deleteDir()
            }
        }

        stage('Checkout') {
            steps {
                echo 'üì• Checking out code from GitHub...'
                checkout scm
            }
        }

        stage('Build & Test') {
            steps {
                dir('javaapp-pipeline') {
                    echo 'üî® Building and testing Java application...'
                    sh 'mvn clean package'
                }
            }
        }

        stage('Build Docker Image') {
            when {
                not { changeRequest() }   // üëà Skip this stage for PR builds
            }
            steps {
                dir('javaapp-pipeline') {
                    echo "üê≥ Building Docker image ${DOCKER_IMAGE}..."
                    sh "docker build -t ${DOCKER_IMAGE} ."
                }
            }
        }

        stage('Deploy') {
            when {
                not { changeRequest() }   // üëà Skip this stage for PR builds
            }
            steps {
                echo "üöÄ Deploying Docker container ${CONTAINER_NAME}..."
                sh "docker stop ${CONTAINER_NAME} || true"
                sh "docker rm ${CONTAINER_NAME} || true"
                sh "docker run -d --name ${CONTAINER_NAME} -p ${HOST_PORT}:${APP_PORT} ${DOCKER_IMAGE}"
            }
        }
    }

    post {
        success {
            echo '‚úÖ Pipeline completed successfully!'
        }
        failure {
            echo '‚ùå Pipeline failed. Please check the logs.'
        }
    }
}
