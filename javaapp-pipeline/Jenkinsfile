pipeline {
  agent any

  environment {
    SCANNER_HOME = '/opt/sonar-scanner'  // âœ… Using direct path instead of Jenkins tool()
  }

  stages {
    stage('Checkout') {
      steps {
        git 'https://github.com/kmcdevops/jenkins.git'
      }
    }

    stage('Build') {
      steps {
        dir('javaapp-pipeline') {
          sh 'mvn clean install'
        }
      }
    }

    stage('SonarQube Scan') {
      steps {
        withSonarQubeEnv('SonarQube') {
          dir('javaapp-pipeline') {
            sh '''
              $SCANNER_HOME/bin/sonar-scanner \
              -Dsonar.projectKey=demo-project \
              -Dsonar.sources=. \
              -Dsonar.java.binaries=target
            '''
          }
        }
      }
    }

    stage("Quality Gate") {
      steps {
        timeout(time: 1, unit: 'MINUTES') {
          waitForQualityGate abortPipeline: true
        }
      }
    }
  }
}
